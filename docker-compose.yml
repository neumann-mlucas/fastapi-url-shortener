services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    network_mode: host
    restart: unless-stopped

  api01: &api
    build: .
    command: gunicorn -k uvicorn.workers.UvicornWorker app.main:app --bind 0.0.0.0:8080
    environment:
      - CACHE_URI=redis://localhost:6379
      - DATABASE_URI=postgresql+asyncpg://postgres:password@localhost:5432/postgres
    expose:
      - 8080
    depends_on:
      - db
      - redis
    network_mode: host
    restart: unless-stopped

  api02:
    <<: *api
    command: gunicorn -k uvicorn.workers.UvicornWorker app.main:app --bind 0.0.0.0:8081
    environment:
      - CACHE_URI=redis://localhost:6379
      - DATABASE_URI=postgresql+asyncpg://postgres:password@localhost:5432/postgres
    depends_on:
      - db
      - redis
      - api01
    expose:
      - 8081

  db:
    image: postgres:15-alpine
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    network_mode: host
    restart: unless-stopped
    volumes:
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
      - db_data:/var/lib/postgresql/data/

  redis:
    image: redis:latest
    command: redis-server --save "" --appendonly no --maxclients 20000
    expose:
      - 6379
    network_mode: host
    restart: unless-stopped
    volumes:
      - redis_data:/data

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
